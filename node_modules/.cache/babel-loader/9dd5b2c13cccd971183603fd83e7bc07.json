{"ast":null,"code":"import _toConsumableArray from\"/home/abbas/jsPractice/tasks/task-forks/github-forks-app/github-forks-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{SET_FORKS}from\"../constants/actions\";export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_FORKS:return _toConsumableArray(action.payload);default:return state;}});","map":{"version":3,"sources":["/home/abbas/jsPractice/tasks/task-forks/github-forks-app/github-forks-app/src/reducers/forks.js"],"names":["SET_FORKS","state","action","type","payload"],"mappings":"oKAAA,OAASA,SAAT,KAA0B,sBAA1B,CAEA,eAAe,UAAsB,IAArBC,CAAAA,KAAqB,2DAAf,EAAe,IAAXC,CAAAA,MAAW,2CACjC,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKH,CAAAA,SAAL,CACI,0BACOE,MAAM,CAACE,OADd,EAGJ,QACI,MAAOH,CAAAA,KAAP,CANR,CAQH,CATD","sourcesContent":["import { SET_FORKS } from \"../constants/actions\";\n\nexport default (state=[], action) => {\n    switch (action.type) {\n        case SET_FORKS:\n            return [\n                ...action.payload\n            ];\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}