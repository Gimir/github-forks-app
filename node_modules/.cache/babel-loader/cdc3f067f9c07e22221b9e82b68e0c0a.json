{"ast":null,"code":"import _slicedToArray from \"/home/abbas/jsPractice/tasks/task-forks/github-forks-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/abbas/jsPractice/tasks/task-forks/github-forks-app/src/components/HeaderContainer.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setRequestData } from '../actionCreators/requestData';\nimport SearchField from './SearchField';\n\nconst HeaderContainer = ({\n  setDataForFetching,\n  history\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputValue = _useState2[0],\n        setInputValue = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        invalidInput = _useState4[0],\n        setInvalidInput = _useState4[1];\n\n  const onBtnClick = () => {\n    const inputValidator = new RegExp(/^([a-z0-9]|[a-z0-9](-(?!-)|[a-z0-9]){0,37}[a-z0-9])\\/[a-z0-9-]{1,39}$/i);\n\n    if (inputValidator.test(inputValue)) {\n      const _inputValue$split = inputValue.split('/'),\n            _inputValue$split2 = _slicedToArray(_inputValue$split, 2),\n            owner = _inputValue$split2[0],\n            repo = _inputValue$split2[1];\n\n      setDataForFetching(owner, repo, 1);\n      history.push(`/search/${owner}/${repo}/1`);\n      setInvalidInput(false);\n      setInputValue('');\n    } else {\n      setInvalidInput(true);\n      alert('The search query must be \"owner/repository\"');\n    }\n  };\n\n  const onInputChange = e => {\n    const value = e.target.value;\n    setInputValue(value);\n  };\n\n  return React.createElement(SearchField, {\n    onBtnClick: onBtnClick,\n    onInputChange: onInputChange,\n    inputValue: inputValue,\n    invalidInput: invalidInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setDataForFetching: (owner, repo, page) => dispatch(setRequestData(owner, repo, page))\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(HeaderContainer));","map":{"version":3,"sources":["/home/abbas/jsPractice/tasks/task-forks/github-forks-app/src/components/HeaderContainer.js"],"names":["React","useState","connect","withRouter","setRequestData","SearchField","HeaderContainer","setDataForFetching","history","inputValue","setInputValue","invalidInput","setInvalidInput","onBtnClick","inputValidator","RegExp","test","split","owner","repo","push","alert","onInputChange","e","value","target","mapDispatchToProps","dispatch","page"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,kBAAD;AAAqBC,EAAAA;AAArB,CAAD,KAAmC;AAAA,oBACnBP,QAAQ,CAAC,EAAD,CADW;AAAA;AAAA,QAChDQ,UADgD;AAAA,QACpCC,aADoC;;AAAA,qBAEfT,QAAQ,CAAC,KAAD,CAFO;AAAA;AAAA,QAEhDU,YAFgD;AAAA,QAElCC,eAFkC;;AAIvD,QAAMC,UAAU,GAAG,MAAM;AACrB,UAAMC,cAAc,GAAG,IAAIC,MAAJ,CAAW,wEAAX,CAAvB;;AACA,QAAID,cAAc,CAACE,IAAf,CAAoBP,UAApB,CAAJ,EAAqC;AAAA,gCACXA,UAAU,CAACQ,KAAX,CAAiB,GAAjB,CADW;AAAA;AAAA,YAC1BC,KAD0B;AAAA,YACnBC,IADmB;;AAEjCZ,MAAAA,kBAAkB,CAACW,KAAD,EAAQC,IAAR,EAAc,CAAd,CAAlB;AACAX,MAAAA,OAAO,CAACY,IAAR,CAAc,WAAUF,KAAM,IAAGC,IAAK,IAAtC;AACAP,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH,KAND,MAOK;AACDE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAS,MAAAA,KAAK,CAAC,6CAAD,CAAL;AACH;AAEJ,GAdD;;AAgBA,QAAMC,aAAa,GAAGC,CAAC,IAAI;AAAA,UACfC,KADe,GACLD,CAAC,CAACE,MADG,CACfD,KADe;AAEvBd,IAAAA,aAAa,CAACc,KAAD,CAAb;AACH,GAHD;;AAKA,SACI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAEX,UADhB;AAEI,IAAA,aAAa,EAAES,aAFnB;AAGI,IAAA,UAAU,EAAEb,UAHhB;AAII,IAAA,YAAY,EAAEE,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAQH,CAjCD;;AAmCA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACpCpB,EAAAA,kBAAkB,EAAE,CAACW,KAAD,EAAQC,IAAR,EAAcS,IAAd,KAAuBD,QAAQ,CAACvB,cAAc,CAACc,KAAD,EAAQC,IAAR,EAAcS,IAAd,CAAf;AADf,CAAL,CAAnC;;AAIA,eAAezB,UAAU,CAACD,OAAO,CAC7B,IAD6B,EAE7BwB,kBAF6B,CAAP,CAGxBpB,eAHwB,CAAD,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setRequestData } from '../actionCreators/requestData';\n\nimport SearchField from './SearchField';\n\n\nconst HeaderContainer = ({setDataForFetching, history}) => {\n    const [inputValue, setInputValue] = useState('');\n    const [invalidInput, setInvalidInput] = useState(false);\n\n    const onBtnClick = () => {\n        const inputValidator = new RegExp(/^([a-z0-9]|[a-z0-9](-(?!-)|[a-z0-9]){0,37}[a-z0-9])\\/[a-z0-9-]{1,39}$/i);\n        if (inputValidator.test(inputValue)) {\n            const [owner, repo] = inputValue.split('/');\n            setDataForFetching(owner, repo, 1);\n            history.push(`/search/${owner}/${repo}/1`);\n            setInvalidInput(false);\n            setInputValue('');\n        }\n        else {\n            setInvalidInput(true);\n            alert('The search query must be \"owner/repository\"');\n        }\n        \n    };\n\n    const onInputChange = e => {\n        const { value } = e.target;\n        setInputValue(value);\n    }\n    \n    return (\n        <SearchField \n            onBtnClick={onBtnClick} \n            onInputChange={onInputChange} \n            inputValue={inputValue}\n            invalidInput={invalidInput} \n        />\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    setDataForFetching: (owner, repo, page) => dispatch(setRequestData(owner, repo, page))\n});\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps\n)(HeaderContainer));"]},"metadata":{},"sourceType":"module"}