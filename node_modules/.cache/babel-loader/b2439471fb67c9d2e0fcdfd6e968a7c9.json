{"ast":null,"code":"import _slicedToArray from \"/home/abbas/jsPractice/tasks/task-forks/github-forks-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/abbas/jsPractice/tasks/task-forks/github-forks-app/src/pages/ResultsPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchForks } from '../actionCreators/forks';\nimport { setRequestData } from '../actionCreators/requestData';\nimport { withRouter } from 'react-router-dom';\nimport { addFavorFork, removeFavorFork } from '../actionCreators/favoritForks';\nimport Pagination from '../components/Pagination';\nimport NotFoundPage from './NotFoundPage';\nimport Wrapper from '../components/Wrapper';\nimport ForksList from '../components/ForksList';\nimport Spinner from '../components/Spinner';\nimport FavorModal from '../components/FavorModal';\nimport OpenModalBtn from '../components/OpenModalBtn';\n\nconst ResultsPage = ({\n  forks,\n  fetchStatus,\n  fetchForks,\n  setRequestData,\n  history,\n  match,\n  requestData,\n  addFavor,\n  removeFavor,\n  favorites\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        modalInputValue = _useState2[0],\n        setModalInputValue = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modalInputShow = _useState4[0],\n        setModalInputShow = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        modalInputInvalid = _useState6[0],\n        setModalInputInvalid = _useState6[1];\n\n  const _match$params = match.params,\n        owner = _match$params.owner,\n        repName = _match$params.repName,\n        number = _match$params.number;\n  const inputValidator = new RegExp(/^([a-z0-9]|[a-z0-9](-(?!-)|[a-z0-9]){0,37}[a-z0-9])\\/[a-z0-9-]{1,39}$/i);\n\n  const changePage = n => {\n    history.push(`/search/${owner}/${repName}/${Number(number) + n}`);\n    setRequestData(owner, repName, number + n);\n  };\n\n  const onModalInputChange = e => {\n    const value = e.target.value;\n    if (modalInputInvalid) setModalInputInvalid(!inputValidator.test(value));\n    setModalInputValue(value);\n  };\n\n  const onAddFavorClick = value => {\n    if (!inputValidator.test(value)) {\n      setModalInputInvalid(true);\n      return;\n    }\n\n    ;\n    addFavor(value);\n    setModalInputValue('');\n    setModalInputShow(false);\n  };\n\n  const onRemoveFavorClick = value => {\n    if (!inputValidator.test(value)) {\n      setModalInputInvalid(true);\n      return;\n    }\n\n    ;\n    removeFavor(value);\n    setModalInputValue('');\n    setModalInputShow(false);\n  };\n\n  const onShowModalClick = () => {\n    setModalInputShow(!modalInputShow);\n  };\n\n  useEffect(() => {\n    fetchForks(owner, repName, number);\n  }, [requestData]);\n  useEffect(() => {\n    const storingData = JSON.stringify(favorites);\n    localStorage.setItem('favorites', storingData);\n  }, [favorites]);\n  if (fetchStatus.error) return React.createElement(NotFoundPage, {\n    value: `${owner}/${repName}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, modalInputShow ? React.createElement(FavorModal, {\n    inputValue: modalInputValue,\n    onInputChange: onModalInputChange,\n    invalidInput: modalInputInvalid,\n    onAddClick: onAddFavorClick.bind(this, modalInputValue),\n    onRemoveClick: onRemoveFavorClick.bind(this, modalInputValue),\n    onBackClick: onShowModalClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null), React.createElement(OpenModalBtn, {\n    onBtnClick: onShowModalClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, fetchStatus.loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }) : React.createElement(ForksList, {\n    forks: forks,\n    favorites: favorites,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(Pagination, {\n    onNextClick: changePage.bind(this, 1),\n    onPrevClick: changePage.bind(this, -1),\n    prevDisabled: Number(number) === 1,\n    nextDisabled: forks.length < 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = ({\n  requestData,\n  forks,\n  favoriteForks,\n  fetchStatus\n}) => ({\n  requestData: requestData,\n  forks: forks,\n  favorites: favoriteForks,\n  fetchStatus: fetchStatus\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchForks: (owner, repository, page) => dispatch(fetchForks(owner, repository, page)),\n  setRequestData: (owner, repository, page) => dispatch(setRequestData(owner, repository, page)),\n  addFavor: fullName => dispatch(addFavorFork(fullName)),\n  removeFavor: fullName => dispatch(removeFavorFork(fullName))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ResultsPage));","map":{"version":3,"sources":["/home/abbas/jsPractice/tasks/task-forks/github-forks-app/src/pages/ResultsPage.js"],"names":["React","useState","useEffect","connect","fetchForks","setRequestData","withRouter","addFavorFork","removeFavorFork","Pagination","NotFoundPage","Wrapper","ForksList","Spinner","FavorModal","OpenModalBtn","ResultsPage","forks","fetchStatus","history","match","requestData","addFavor","removeFavor","favorites","modalInputValue","setModalInputValue","modalInputShow","setModalInputShow","modalInputInvalid","setModalInputInvalid","params","owner","repName","number","inputValidator","RegExp","changePage","n","push","Number","onModalInputChange","e","value","target","test","onAddFavorClick","onRemoveFavorClick","onShowModalClick","storingData","JSON","stringify","localStorage","setItem","error","bind","loading","length","mapStateToProps","favoriteForks","mapDispatchToProps","dispatch","repository","page","fullName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchForks } from '../actionCreators/forks';\nimport { setRequestData } from '../actionCreators/requestData';\nimport { withRouter } from 'react-router-dom';\nimport { addFavorFork, removeFavorFork } from '../actionCreators/favoritForks';\n\nimport Pagination from '../components/Pagination';\nimport NotFoundPage from './NotFoundPage';\nimport Wrapper from '../components/Wrapper';\nimport ForksList from '../components/ForksList';\nimport Spinner from '../components/Spinner';\nimport FavorModal from '../components/FavorModal';\nimport OpenModalBtn from '../components/OpenModalBtn';\n\nconst ResultsPage = ({\n    forks,\n    fetchStatus,\n    fetchForks,\n    setRequestData,\n    history,\n    match,\n    requestData,\n    addFavor,\n    removeFavor,\n    favorites\n}) => {\n    const [modalInputValue, setModalInputValue] = useState('');\n    const [modalInputShow, setModalInputShow] = useState(false);\n    const [modalInputInvalid, setModalInputInvalid] = useState(false);\n    const { owner, repName, number } = match.params;\n    const inputValidator = new RegExp(/^([a-z0-9]|[a-z0-9](-(?!-)|[a-z0-9]){0,37}[a-z0-9])\\/[a-z0-9-]{1,39}$/i);\n\n    const changePage = (n) => {\n        history.push(`/search/${owner}/${repName}/${Number(number) + n}`);\n        setRequestData( owner, repName, number + n );\n    };\n\n    const onModalInputChange = e => {\n        const { value } = e.target;\n        if (modalInputInvalid) setModalInputInvalid(!inputValidator.test(value));\n        setModalInputValue(value);\n    };\n\n    const onAddFavorClick = (value) => {\n        if (!inputValidator.test(value)) {\n            setModalInputInvalid(true);\n            return;\n        };\n        addFavor(value);\n        setModalInputValue('');\n        setModalInputShow(false);\n    };\n\n    const onRemoveFavorClick = value => {\n        if (!inputValidator.test(value)) {\n            setModalInputInvalid(true);\n            return;\n        };\n        removeFavor(value);\n        setModalInputValue('');\n        setModalInputShow(false);\n    }\n\n    const onShowModalClick = () => {\n        setModalInputShow(!modalInputShow);\n    };\n\n    useEffect(()=> {\n        fetchForks(owner, repName, number);\n    }, [requestData]);\n\n    useEffect(() => {\n        const storingData = JSON.stringify(favorites);\n        localStorage.setItem('favorites', storingData);\n    }, [favorites])\n\n    if (fetchStatus.error) return <NotFoundPage value={`${owner}/${repName}`} />\n\n    return (\n        <div>\n            {modalInputShow ?\n            <FavorModal\n                inputValue={modalInputValue}\n                onInputChange={onModalInputChange}\n                invalidInput={modalInputInvalid}\n                onAddClick={onAddFavorClick.bind(this, modalInputValue)}\n                onRemoveClick={onRemoveFavorClick.bind(this, modalInputValue)}\n                onBackClick={onShowModalClick}\n            />\n            :\n            <></>}\n            <OpenModalBtn onBtnClick={onShowModalClick} />\n            <Wrapper>\n                {fetchStatus.loading ? <Spinner /> : <ForksList forks={forks} favorites={favorites} />}\n            </Wrapper>\n            <Pagination \n                onNextClick={changePage.bind(this, 1)}\n                onPrevClick={changePage.bind(this, -1)}\n                prevDisabled={Number(number) === 1}\n                nextDisabled={forks.length < 10}\n            />\n        </div>\n    );\n};\n\nconst mapStateToProps = ({requestData, forks, favoriteForks, fetchStatus}) => ({\n    requestData: requestData,\n    forks: forks,\n    favorites: favoriteForks,\n    fetchStatus: fetchStatus\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchForks: (owner, repository, page) => dispatch(fetchForks(owner, repository, page)),\n    setRequestData: (owner, repository, page) => dispatch(setRequestData(owner, repository, page)),\n    addFavor: fullName => dispatch(addFavorFork(fullName)),\n    removeFavor: fullName => dispatch(removeFavorFork(fullName))\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ResultsPage));"]},"metadata":{},"sourceType":"module"}