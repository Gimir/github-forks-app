{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n  if (typeof devToolsExtension === 'function') enhancers.push(devToolsExtension());\n}\n\nconst composeEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\nconst store = createStore(rootReducer(history), initialState, composeEnhancers);\nexport default store;","map":{"version":3,"sources":["/home/abbas/jsPractice/tasks/task-forks/github-forks-app/src/store.js"],"names":["createStore","applyMiddleware","compose","thunk","rootReducer","initialState","enhancers","middleware","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","push","composeEnhancers","store","history"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,UAAU,GAAG,CACfJ,KADe,CAAnB;;AAIA,IAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxC,QAAMC,iBAAiB,GAAGC,MAAM,CAACC,4BAAjC;AAEA,MAAI,OAAOF,iBAAP,KAA6B,UAAjC,EAA6CL,SAAS,CAACQ,IAAV,CAAeH,iBAAiB,EAAhC;AAChD;;AAED,MAAMI,gBAAgB,GAAGb,OAAO,CAC5BD,eAAe,CAAC,GAAGM,UAAJ,CADa,EAE5B,GAAGD,SAFyB,CAAhC;AAKA,MAAMU,KAAK,GAAGhB,WAAW,CACrBI,WAAW,CAACa,OAAD,CADU,EAErBZ,YAFqB,EAGrBU,gBAHqB,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n    thunk\n];\n\nif (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n    \n    if (typeof devToolsExtension === 'function') enhancers.push(devToolsExtension());\n}\n\nconst composeEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n);\n\nconst store = createStore(\n    rootReducer(history),\n    initialState,\n    composeEnhancers\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}