{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/abbas/jsPractice/tasks/task-forks/github-forks-app/github-forks-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n    width: 100%;\\n    border-right: 1px solid \",\";\\n    border-left: 1px solid \",\";\\n    display: flex;\\n    justify-content: center;\\n    align-items:center;\\n    height: 100px;\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n    height: 100%;\\n    padding: 0 5px 0 5px;\\n    overflow: hidden;\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: 50px;\\n    background-color: \",\";\\n    border-radius: 0 0 10px 10px;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    width: 100%;\\n    height: 50px;\\n    background-color: \",\";\\n    line-height: 50px;\\n    text-align: left;\\n    color: \",\";\\n    font-size: 18px;\\n    border-radius: 10px 10px 0 0;\\n    display: flex;\\n    flex-direction: row;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    max-width: 700px;\\n    min-width: 300px;\\n    width: 100%;\\n    border-radius: 10px;\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import colors from'../constants/colors';import ForkRow from'./ForkRow';var StyledDiv=styled.div(_templateObject());var StyledHeader=styled.div(_templateObject2(),colors.main,colors.text);var StyledFooter=styled.div(_templateObject3(),colors.main);var StyledColumn=styled.div(_templateObject4());var StyledSpace=styled.div(_templateObject5(),colors.main,colors.main);var ForksList=function ForksList(_ref){var forks=_ref.forks,favorites=_ref.favorites;return React.createElement(StyledDiv,null,React.createElement(StyledHeader,null,React.createElement(StyledColumn,{style:{width:'30%'}},\"Author\"),React.createElement(StyledColumn,{style:{width:'40%'}},\"Repository Name\"),React.createElement(StyledColumn,{style:{width:'15%'}},\"Stars\"),React.createElement(StyledColumn,{style:{width:'15%'}},\"Link\")),forks.length<1?React.createElement(StyledSpace,null,\"There is no forks of this repository(\"):forks.map(function(fork){return React.createElement(ForkRow,{author:fork.author.login,repName:fork.repositoryName,stars:fork.stars,link:fork.url,key:fork.id,favorite:favorites.includes(fork.repositoryName)});}),React.createElement(StyledFooter,null));};export default ForksList;","map":{"version":3,"sources":["/home/abbas/jsPractice/tasks/task-forks/github-forks-app/github-forks-app/src/components/ForksList.js"],"names":["React","styled","colors","ForkRow","StyledDiv","div","StyledHeader","main","text","StyledFooter","StyledColumn","StyledSpace","ForksList","forks","favorites","width","length","map","fork","author","login","repositoryName","stars","url","id","includes"],"mappings":"4kDAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA,GAAMC,CAAAA,SAAS,CAAGH,MAAM,CAACI,GAAV,mBAAf,CASA,GAAMC,CAAAA,YAAY,CAAGL,MAAM,CAACI,GAAV,oBAGMH,MAAM,CAACK,IAHb,CAMLL,MAAM,CAACM,IANF,CAAlB,CAYA,GAAMC,CAAAA,YAAY,CAAGR,MAAM,CAACI,GAAV,oBAGMH,MAAM,CAACK,IAHb,CAAlB,CAMA,GAAMG,CAAAA,YAAY,CAAGT,MAAM,CAACI,GAAV,oBAAlB,CAKA,GAAMM,CAAAA,WAAW,CAAGV,MAAM,CAACI,GAAV,oBAEaH,MAAM,CAACK,IAFpB,CAGYL,MAAM,CAACK,IAHnB,CAAjB,CAUA,GAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,UAAEC,CAAAA,KAAF,MAAEA,KAAF,CAASC,SAAT,MAASA,SAAT,OACd,qBAAC,SAAD,MACI,oBAAC,YAAD,MACI,oBAAC,YAAD,EAAc,KAAK,CAAE,CAACC,KAAK,CAAE,KAAR,CAArB,WADJ,CAEI,oBAAC,YAAD,EAAc,KAAK,CAAE,CAACA,KAAK,CAAE,KAAR,CAArB,oBAFJ,CAGI,oBAAC,YAAD,EAAc,KAAK,CAAE,CAACA,KAAK,CAAE,KAAR,CAArB,UAHJ,CAII,oBAAC,YAAD,EAAc,KAAK,CAAE,CAACA,KAAK,CAAE,KAAR,CAArB,SAJJ,CADJ,CAQWF,KAAK,CAACG,MAAN,CAAe,CAAf,CAEA,oBAAC,WAAD,8CAFA,CAICH,KAAK,CAACI,GAAN,CAAU,SAAAC,IAAI,QACV,qBAAC,OAAD,EACI,MAAM,CAAEA,IAAI,CAACC,MAAL,CAAYC,KADxB,CAEI,OAAO,CAAEF,IAAI,CAACG,cAFlB,CAGI,KAAK,CAAEH,IAAI,CAACI,KAHhB,CAII,IAAI,CAAEJ,IAAI,CAACK,GAJf,CAKI,GAAG,CAAEL,IAAI,CAACM,EALd,CAMI,QAAQ,CAAEV,SAAS,CAACW,QAAV,CAAmBP,IAAI,CAACG,cAAxB,CANd,EADU,EAAd,CAZZ,CAuBI,oBAAC,YAAD,MAvBJ,CADc,EAAlB,CA4BA,cAAeT,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../constants/colors';\n\nimport ForkRow from './ForkRow';\n\nconst StyledDiv = styled.div`\n    max-width: 700px;\n    min-width: 300px;\n    width: 100%;\n    border-radius: 10px;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n`;\nconst StyledHeader = styled.div`\n    width: 100%;\n    height: 50px;\n    background-color: ${colors.main};\n    line-height: 50px;\n    text-align: left;\n    color: ${colors.text};\n    font-size: 18px;\n    border-radius: 10px 10px 0 0;\n    display: flex;\n    flex-direction: row;\n`;\nconst StyledFooter = styled.div`\n    width: 100%;\n    height: 50px;\n    background-color: ${colors.main};\n    border-radius: 0 0 10px 10px;\n`;\nconst StyledColumn = styled.div`\n    height: 100%;\n    padding: 0 5px 0 5px;\n    overflow: hidden;\n`;\nconst StyledSpace = styled.div`\n    width: 100%;\n    border-right: 1px solid ${colors.main};\n    border-left: 1px solid ${colors.main};\n    display: flex;\n    justify-content: center;\n    align-items:center;\n    height: 100px;\n`;\n\nconst ForksList = ({forks, favorites}) => (\n    <StyledDiv>\n        <StyledHeader>\n            <StyledColumn style={{width: '30%'}}>Author</StyledColumn>\n            <StyledColumn style={{width: '40%'}}>Repository Name</StyledColumn>\n            <StyledColumn style={{width: '15%'}}>Stars</StyledColumn>\n            <StyledColumn style={{width: '15%'}}>Link</StyledColumn>\n        </StyledHeader>\n            {\n               forks.length < 1 \n               ? \n               <StyledSpace>There is no forks of this repository(</StyledSpace>\n               :\n                forks.map(fork => (\n                    <ForkRow \n                        author={fork.author.login} \n                        repName={fork.repositoryName} \n                        stars={fork.stars} \n                        link={fork.url} \n                        key={fork.id}\n                        favorite={favorites.includes(fork.repositoryName)}\n                    />\n                ))\n            }\n        <StyledFooter></StyledFooter>\n    </StyledDiv>\n);\n\nexport default ForksList;"]},"metadata":{},"sourceType":"module"}