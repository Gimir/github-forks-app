{"ast":null,"code":"import axios from'axios';import{SET_FORKS}from'../constants/actions';import{startLoading,stopLoadingSuccess,stopLoadingError}from'./fetchStatus';var ENDPOINT='https://api.github.com';//user/repos?page=2&per_page=100\nexport var setForks=function setForks(forks){return{type:SET_FORKS,payload:forks};};export var fetchForks=function fetchForks(owner,repository,page){return function(dispatch){dispatch(startLoading());axios.get(\"\".concat(ENDPOINT,\"/repos/\").concat(owner,\"/\").concat(repository,\"/forks?page=\").concat(page,\"&per_page=10\")).then(function(res){dispatch(stopLoadingSuccess());var forks=res.data.map(function(fork){var id=fork.id,full_name=fork.full_name,stargazers_count=fork.stargazers_count,clone_url=fork.clone_url,_fork$owner=fork.owner,login=_fork$owner.login,avatar_url=_fork$owner.avatar_url;return{id:id,author:{login:login,avatar_url:avatar_url},repositoryName:full_name,stars:stargazers_count,url:clone_url};});dispatch(setForks(forks));}).catch(function(err){dispatch(stopLoadingError(err.message));dispatch(setForks([]));});};};","map":{"version":3,"sources":["/home/abbas/jsPractice/tasks/task-forks/github-forks-app/github-forks-app/src/actionCreators/forks.js"],"names":["axios","SET_FORKS","startLoading","stopLoadingSuccess","stopLoadingError","ENDPOINT","setForks","forks","type","payload","fetchForks","owner","repository","page","dispatch","get","then","res","data","map","fork","id","full_name","stargazers_count","clone_url","login","avatar_url","author","repositoryName","stars","url","catch","err","message"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,sBAA1B,CACA,OAASC,YAAT,CAAuBC,kBAAvB,CAA2CC,gBAA3C,KAAmE,eAAnE,CAEA,GAAMC,CAAAA,QAAQ,CAAG,wBAAjB,CACA;AAGA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,QAAK,CAC9BC,IAAI,CAAEP,SADwB,CAE9BQ,OAAO,CAAEF,KAFqB,CAAL,EAAtB,CAMP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAQC,UAAR,CAAoBC,IAApB,CAA6B,CACnD,MAAO,UAAAC,QAAQ,CAAI,CACfA,QAAQ,CAACZ,YAAY,EAAb,CAAR,CAEAF,KAAK,CACAe,GADL,WACYV,QADZ,mBAC8BM,KAD9B,aACuCC,UADvC,wBACgEC,IADhE,kBAEKG,IAFL,CAEU,SAAAC,GAAG,CAAI,CACTH,QAAQ,CAACX,kBAAkB,EAAnB,CAAR,CAEA,GAAMI,CAAAA,KAAK,CAAGU,GAAG,CAACC,IAAJ,CAASC,GAAT,CAAa,SAAAC,IAAI,CAAI,IAE3BC,CAAAA,EAF2B,CAU3BD,IAV2B,CAE3BC,EAF2B,CAG3BC,SAH2B,CAU3BF,IAV2B,CAG3BE,SAH2B,CAI3BC,gBAJ2B,CAU3BH,IAV2B,CAI3BG,gBAJ2B,CAK3BC,SAL2B,CAU3BJ,IAV2B,CAK3BI,SAL2B,aAU3BJ,IAV2B,CAM3BT,KAN2B,CAOvBc,KAPuB,aAOvBA,KAPuB,CAQvBC,UARuB,aAQvBA,UARuB,CAY/B,MAAO,CACHL,EAAE,CAAFA,EADG,CAEHM,MAAM,CAAE,CACJF,KAAK,CAALA,KADI,CAEJC,UAAU,CAAVA,UAFI,CAFL,CAMHE,cAAc,CAAEN,SANb,CAOHO,KAAK,CAAEN,gBAPJ,CAQHO,GAAG,CAAEN,SARF,CAAP,CAUH,CAtBa,CAAd,CAwBAV,QAAQ,CAACR,QAAQ,CAACC,KAAD,CAAT,CAAR,CACH,CA9BL,EA+BKwB,KA/BL,CA+BW,SAAAC,GAAG,CAAI,CACVlB,QAAQ,CAACV,gBAAgB,CAAC4B,GAAG,CAACC,OAAL,CAAjB,CAAR,CACAnB,QAAQ,CAACR,QAAQ,CAAC,EAAD,CAAT,CAAR,CACH,CAlCL,EAmCH,CAtCD,CAuCH,CAxCM","sourcesContent":["import axios from 'axios';\nimport { SET_FORKS } from '../constants/actions';\nimport { startLoading, stopLoadingSuccess, stopLoadingError } from './fetchStatus';\n\nconst ENDPOINT = 'https://api.github.com';\n//user/repos?page=2&per_page=100\n\n\nexport const setForks = forks => ({\n    type: SET_FORKS,\n    payload: forks\n});\n\n\nexport const fetchForks = (owner, repository, page) => {\n    return dispatch => {\n        dispatch(startLoading());\n\n        axios\n            .get(`${ENDPOINT}/repos/${owner}/${repository}/forks?page=${page}&per_page=10`)\n            .then(res => {\n                dispatch(stopLoadingSuccess());\n                \n                const forks = res.data.map(fork => {\n                    const { \n                        id,\n                        full_name, \n                        stargazers_count,\n                        clone_url,\n                        owner: {\n                            login,\n                            avatar_url\n                        }, \n                    } = fork;\n\n                    return {\n                        id,\n                        author: {\n                            login,\n                            avatar_url,\n                        },\n                        repositoryName: full_name,\n                        stars: stargazers_count,\n                        url: clone_url,\n                    };\n                });\n\n                dispatch(setForks(forks));\n            })\n            .catch(err => {\n                dispatch(stopLoadingError(err.message));\n                dispatch(setForks([]));\n            });\n    };\n};"]},"metadata":{},"sourceType":"module"}