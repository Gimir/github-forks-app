{"version":3,"sources":["actionCreators/requestData.js","constants/actions.js","constants/colors.js","components/SearchField.js","components/HeaderContainer.js","pages/HomePage.js","actionCreators/forks.js","components/Pagination.js","pages/NotFoundPage.js","components/Wrapper.js","components/ForkRow.js","components/ForksList.js","components/Spinner.js","components/FavorModal.js","components/OpenModalBtn.js","pages/ResultsPage.js","actionCreators/fetchStatus.js","actionCreators/favoritForks.js","App.js","reducers/favoriteForks.js","reducers/fetchStatus.js","reducers/forks.js","reducers/pageNumber.js","reducers/requestData.js","store.js","reducers/index.js","serviceWorker.js","index.js"],"names":["setRequestData","owner","repository","page","type","payload","StyledNav","styled","nav","colors","StyledForm","form","SearchField","onBtnClick","onInputChange","inputValue","invalidInput","value","onChange","style","borderColor","placeholder","onClick","e","preventDefault","withRouter","connect","dispatch","setDataForFetching","repo","history","useState","setInputValue","setInvalidInput","RegExp","test","split","push","alert","target","StyledDiv","div","HomePage","props","setForks","forks","Pagination","onPrevClick","onNextClick","prevDisabled","nextDisabled","disabled","NotFoundPage","Wrapper","children","StyledColumn","ForkRow","author","repName","stars","link","favorite","backgroundColor","width","href","color","StyledHeader","StyledFooter","StyledSpace","ForksList","favorites","length","map","fork","login","repositoryName","url","key","id","includes","AnimatedDiv","Spinner","StyledBack","CloseBackground","StyledModal","FavorModal","onAddClick","onRemoveClick","onBackClick","OpenModalBtn","requestData","favoriteForks","fetchStatus","fetchForks","axios","get","then","res","data","full_name","stargazers_count","clone_url","avatar_url","catch","err","message","addFavor","fullName","removeFavor","match","modalInputValue","setModalInputValue","modalInputShow","setModalInputShow","modalInputInvalid","setModalInputInvalid","params","number","inputValidator","changePage","n","Number","onShowModalClick","useEffect","storingData","JSON","stringify","localStorage","setItem","error","bind","loading","App","exact","path","component","ResultsPage","initialState","getItem","parse","state","action","filter","middleware","createHistory","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","combineReducers","pageNumber","Boolean","window","location","hostname","document","querySelector","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32db175f.chunk.js","sourcesContent":["import { SET_REQUEST_DATA } from '../constants/actions';\n\nexport const setRequestData = (owner, repository, page) => ({\n    type: SET_REQUEST_DATA,\n    payload: {\n        owner,\n        repository,\n        page\n    }\n});","export const SET_FORKS = 'SET_FORKS';\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING_SUCCESS = 'STOP_LOADING_SUCCESS';\nexport const STOP_LOADING_ERROR = 'STOP_LOADING_ERROR';\nexport const SET_PAGE_NUMBER = 'SET_PAGE_NUMBER';\nexport const ADD_FAVOR_FORK = 'ADD_FAVOR_FORK'\nexport const REMOVE_FAVOR_FORK = 'REMOVE_FAVOR_FORK';\nexport const SET_REQUEST_DATA = 'SET_REQUEST_DATA';","export default {\n    main: '#3f51b5',\n    second: '#2196f3',\n    text: '#212121',\n    links: '#673ab7',\n    error: '#d50000'\n}","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../constants/colors';\n\nconst StyledNav = styled.nav`\n    width: 100%;\n    height: 100px;\n    background-color: ${colors.main};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0 10px 0 10px;\n`;\n\nconst StyledForm = styled.form`\n    max-width: 500px;\n    min-width: 300px;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    flex-direction: row;\n\n    input[type=\"text\"] {\n        width: 80%;\n        height: 100%;\n        border: 2px solid #fff;\n        color: ${colors.text};\n        padding: 10px;\n        font-size: 18px;\n        border-radius: 10px 0 0 10px;\n        outline: none;\n    }\n\n    button {\n        width: 20%;\n        height: 100%;\n        border: none;\n        outline: none;\n        font-size: 20px;\n        color: #fff;\n        background-color: ${colors.second};\n        border-radius: 0 10px 10px 0;\n        transition: 0.2s;\n        &:hover {\n            cursor: pointer;\n            opacity: 0.8;\n        }\n    }\n`;\n\nconst SearchField = ({onBtnClick, onInputChange, inputValue, invalidInput}) => {\n    \n    return (\n        <StyledNav>\n            <StyledForm>\n                <input \n                    type=\"text\" \n                    value={inputValue} \n                    onChange={onInputChange} \n                    style={{borderColor: invalidInput ? colors.error : '#fff'}}\n                    placeholder=\"Owner/repository\"    \n                />\n                <button onClick={e => {\n                    e.preventDefault();\n                    onBtnClick();\n                }}>search</button>\n            </StyledForm>\n        </StyledNav>\n    );\n};\n\nexport default SearchField;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setRequestData } from '../actionCreators/requestData';\n\nimport SearchField from './SearchField';\n\n\nconst HeaderContainer = ({setDataForFetching, history}) => {\n    const [inputValue, setInputValue] = useState('');\n    const [invalidInput, setInvalidInput] = useState(false);\n\n    const onBtnClick = () => {\n        const inputValidator = new RegExp(/^([a-z0-9]|[a-z0-9](-(?!-)|[a-z0-9]){0,37}[a-z0-9])\\/[a-z0-9-]{1,39}$/i);\n        if (inputValidator.test(inputValue)) {\n            const [owner, repo] = inputValue.split('/');\n            setDataForFetching(owner, repo, 1);\n            history.push(`/search/${owner}/${repo}/1`);\n            setInvalidInput(false);\n            setInputValue('');\n        }\n        else {\n            setInvalidInput(true);\n            alert('The search query must be \"owner/repository\"');\n        }\n        \n    };\n\n    const onInputChange = e => {\n        const { value } = e.target;\n        setInputValue(value);\n    }\n    \n    return (\n        <SearchField \n            onBtnClick={onBtnClick} \n            onInputChange={onInputChange} \n            inputValue={inputValue}\n            invalidInput={invalidInput} \n        />\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    setDataForFetching: (owner, repo, page) => dispatch(setRequestData(owner, repo, page))\n});\n\nexport default withRouter(connect(\n    null,\n    mapDispatchToProps\n)(HeaderContainer));","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../constants/colors';\n\nconst StyledDiv = styled.div`\n    width: 100%;\n    min-height: 80vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    padding: 0 10px 0 10px;\n    color: ${colors.text};\n\n    h1 {\n        font-size: 40px;\n        font-weight: bold;\n        margin-bottom: 20px;\n    }\n    h2 {\n        font-size: 30px;\n        font-weight: bold;\n        min-width: 300px\n        max-width: 600px;\n        text-align: center;\n    }\n`;\n\nconst HomePage = props => {\n    return (\n        <StyledDiv>\n            <h1>WELCOME</h1>\n            <h2>This is the Fork's App! Type the full name of repository in the search input and you will get full fork list of it with main information!</h2>\n        </StyledDiv>\n    );\n};\n\nexport default HomePage;","import axios from 'axios';\nimport { SET_FORKS } from '../constants/actions';\nimport { startLoading, stopLoadingSuccess, stopLoadingError } from './fetchStatus';\n\nconst ENDPOINT = 'https://api.github.com';\n//user/repos?page=2&per_page=100\n\n\nexport const setForks = forks => ({\n    type: SET_FORKS,\n    payload: forks\n});\n\n\nexport const fetchForks = (owner, repository, page) => {\n    return dispatch => {\n        dispatch(startLoading());\n\n        axios\n            .get(`${ENDPOINT}/repos/${owner}/${repository}/forks?page=${page}&per_page=10`)\n            .then(res => {\n                dispatch(stopLoadingSuccess());\n                \n                const forks = res.data.map(fork => {\n                    const { \n                        id,\n                        full_name, \n                        stargazers_count,\n                        clone_url,\n                        owner: {\n                            login,\n                            avatar_url\n                        }, \n                    } = fork;\n\n                    return {\n                        id,\n                        author: {\n                            login,\n                            avatar_url,\n                        },\n                        repositoryName: full_name,\n                        stars: stargazers_count,\n                        url: clone_url,\n                    };\n                });\n\n                dispatch(setForks(forks));\n            })\n            .catch(err => {\n                dispatch(stopLoadingError(err.message));\n                dispatch(setForks([]));\n            });\n    };\n};","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../constants/colors';\n\nconst StyledDiv = styled.div`\n    width: 100%;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    \n    button {\n        width: 80px;\n        height: 50px;\n        border: none;\n        background-color: ${colors.second};\n        font-size: 20px;\n        color: ${colors.text};\n        transition: 0.2s;\n\n        &:hover {\n            opacity: 0.8;\n            cursor: pointer;\n        }\n\n        &:disabled:hover {\n            opacity: 1;\n            cursor: default;\n        }\n    }\n    button:first-child {\n        border-radius: 10px 0 0 10px;\n        border-right: 1px solid ${colors.main};\n    }\n    button:last-child {\n        border-radius: 0 10px 10px 0;\n        border-left: 1px solid ${colors.main};\n    }\n`;\n\nconst Pagination = ({onPrevClick, onNextClick, prevDisabled, nextDisabled}) => {\n    return (\n        <StyledDiv>\n            <button onClick={onPrevClick} disabled={prevDisabled}>Prev</button>\n            <button onClick={onNextClick} disabled={nextDisabled}>Next</button>\n        </StyledDiv>\n    );\n};\n\nexport default Pagination;","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../constants/colors';\n\nconst StyledDiv = styled.div`\n    width: 100%;\n    height: 80vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n\n    h1 {\n        font-size: 60px;\n        color: ${colors.text};\n        font-weight: bold;\n        margin-bottom: 50px;\n    }\n    h2 {\n        font-size: 40px;\n        color: ${colors.text};\n        font-weight: bold;\n    }\n`;\n\nconst NotFoundPage = ({value='Page'}) => (\n    <StyledDiv>\n        <h1>404</h1>\n        <h2>{value} not found!</h2>\n    </StyledDiv>\n);\n\nexport default NotFoundPage;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\n    width: 100%;\n    min-height: 65vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 30px 10px 30px 10px;\n`;\n\nconst Wrapper = ({children}) => (\n    <StyledDiv>\n        {children}\n    </StyledDiv>\n);\n\nexport default Wrapper;","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../constants/colors';\n\nconst StyledDiv = styled.div`\n    width: 100%;\n    height: 50px;\n    border-right: 1px solid ${colors.main};\n    border-left: 1px solid ${colors.main};\n    display: flex;\n    flex-direction: row;\n`;\nconst StyledColumn = styled.div`\n    height: 100%;\n    text-aign: left;\n    font-size: 14px;\n    color: ${colors.text};\n    padding: 0 5px 0 5px;\n    overflow: hidden;\n    border-right: 1px solid ${colors.main};\n`;\n\nconst ForkRow = ({\n    author,\n    repName,\n    stars,\n    link,\n    favorite\n}) => (\n    <StyledDiv style={{backgroundColor: favorite ? colors.second : ''}}>\n        <StyledColumn style={{width: '30%'}}>{author}</StyledColumn>\n        <StyledColumn style={{width: '40%'}}>{repName}</StyledColumn>\n        <StyledColumn style={{width: '15%'}}>{stars}</StyledColumn>\n        <StyledColumn style={{width: '15%'}}><a href={link} style={{color: colors.links}}>Go to</a></StyledColumn>\n    </StyledDiv>\n);\n\nexport default ForkRow;","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../constants/colors';\n\nimport ForkRow from './ForkRow';\n\nconst StyledDiv = styled.div`\n    max-width: 700px;\n    min-width: 300px;\n    width: 100%;\n    border-radius: 10px;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n`;\nconst StyledHeader = styled.div`\n    width: 100%;\n    height: 50px;\n    background-color: ${colors.main};\n    line-height: 50px;\n    text-align: left;\n    color: ${colors.text};\n    font-size: 18px;\n    border-radius: 10px 10px 0 0;\n    display: flex;\n    flex-direction: row;\n`;\nconst StyledFooter = styled.div`\n    width: 100%;\n    height: 50px;\n    background-color: ${colors.main};\n    border-radius: 0 0 10px 10px;\n`;\nconst StyledColumn = styled.div`\n    height: 100%;\n    padding: 0 5px 0 5px;\n    overflow: hidden;\n`;\nconst StyledSpace = styled.div`\n    width: 100%;\n    border-right: 1px solid ${colors.main};\n    border-left: 1px solid ${colors.main};\n    display: flex;\n    justify-content: center;\n    align-items:center;\n    height: 100px;\n`;\n\nconst ForksList = ({forks, favorites}) => (\n    <StyledDiv>\n        <StyledHeader>\n            <StyledColumn style={{width: '30%'}}>Author</StyledColumn>\n            <StyledColumn style={{width: '40%'}}>Repository Name</StyledColumn>\n            <StyledColumn style={{width: '15%'}}>Stars</StyledColumn>\n            <StyledColumn style={{width: '15%'}}>Link</StyledColumn>\n        </StyledHeader>\n            {\n               forks.length < 1 \n               ? \n               <StyledSpace>There is no forks of this repository(</StyledSpace>\n               :\n                forks.map(fork => (\n                    <ForkRow \n                        author={fork.author.login} \n                        repName={fork.repositoryName} \n                        stars={fork.stars} \n                        link={fork.url} \n                        key={fork.id}\n                        favorite={favorites.includes(fork.repositoryName)}\n                    />\n                ))\n            }\n        <StyledFooter></StyledFooter>\n    </StyledDiv>\n);\n\nexport default ForksList;","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../constants/colors';\n\nconst AnimatedDiv = styled.div`\n    display: inline-block;\n    width: 80px;\n    height: 80px;\n\n    &::after {\n        content: \" \";\n        display: block;\n        width: 64px;\n        height: 64px;\n        margin: 8px;\n        border-radius: 50%;\n        border: 6px solid ${colors.main};\n        border-color: ${colors.main} transparent ${colors.main} transparent;\n        animation: lds-dual-ring 1.2s linear infinite;\n    }\n\n    @keyframes lds-dual-ring {\n        0% {\n          transform: rotate(0deg);\n        }\n        100% {\n          transform: rotate(360deg);\n        }\n    }\n`;\n\nconst Spinner = () => <AnimatedDiv></AnimatedDiv>;\n\nexport default Spinner;","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../constants/colors';\n\nconst StyledBack = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background-color: rgba(1, 1, 1, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst CloseBackground = styled.div`\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 111;\n`;\n\nconst StyledModal = styled.form`\n    width: 100%;\n    max-width: 600px;\n    min-width: 300px;\n    height: 200px;\n    background-color: #fff;\n    border-radius: 15px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    padding: 0 10px 0 10px;\n    position: relative;\n    z-index: 333;\n\n    input[type=\"text\"] {\n        width: 60%;\n        height: 50px;\n        border: 2px solid ${colors.second};\n        color: ${colors.text};\n        padding: 10px;\n        font-size: 18px;\n        border-radius: 10px 0 0 10px;\n        outline: none;\n    }\n    button {\n        width: 20%;\n        height: 50px;\n        border: none;\n        outline: none;\n        font-size: 20px;\n        color: #fff;\n        background-color: ${colors.second};\n        transition: 0.2s;\n        &:hover {\n            cursor: pointer;\n            opacity: 0.8;\n        }\n        &:disabled:hover {\n            cursor: default;\n            opacity: 1;\n        }\n    }\n    button:last-Child {\n        background-color: ${colors.error};\n        border-radius: 0 10px 10px 0;\n    }\n`;\n\nconst FavorModal = ({\n    inputValue, \n    onInputChange, \n    invalidInput, \n    onAddClick,\n    onRemoveClick,\n    onBackClick\n    }) => (\n    <StyledBack>\n        <CloseBackground onClick={onBackClick}></CloseBackground>\n        <StyledModal>\n            <input \n                type=\"text\" \n                value={inputValue} \n                onChange={onInputChange} \n                style={{borderColor: invalidInput ? colors.error : colors.second}}\n                placeholder=\"Owner/repository\"    \n            />\n            <button onClick={e => {\n                e.preventDefault();\n                onAddClick();\n            }} disabled={invalidInput}>Add</button>\n            <button onClick={e => {\n                e.preventDefault();\n                onRemoveClick();\n            }} disabled={invalidInput}>Remove</button>\n        </StyledModal>\n    </StyledBack>\n);\n\nexport default FavorModal;","import React from 'react';\nimport styled from 'styled-components';\nimport colors from '../constants/colors';\n\nconst StyledDiv = styled.div`\n    width: 100%;\n    height: 50px;\n    margin: 20px 0 20px 0;\n    display: flex;\n    justify-content: center;\n\n    button {\n        height: 100%;\n        padding: 0 10px 0 10px;\n        background-color: ${colors.second};\n        cursor: pointer;\n        transition: 0.2s;\n        border: none;\n        border-radius: 10px;\n        font-size: 18px;\n\n        &:hover {\n            opacity: 0.8;\n        }\n    }\n`;\n\nconst OpenModalBtn = ({onBtnClick}) => (\n    <StyledDiv>\n        <button onClick={()=> onBtnClick()}>Edit Favorites</button>\n    </StyledDiv>\n);\n\nexport default OpenModalBtn;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchForks } from '../actionCreators/forks';\nimport { setRequestData } from '../actionCreators/requestData';\nimport { withRouter } from 'react-router-dom';\nimport { addFavorFork, removeFavorFork } from '../actionCreators/favoritForks';\n\nimport Pagination from '../components/Pagination';\nimport NotFoundPage from './NotFoundPage';\nimport Wrapper from '../components/Wrapper';\nimport ForksList from '../components/ForksList';\nimport Spinner from '../components/Spinner';\nimport FavorModal from '../components/FavorModal';\nimport OpenModalBtn from '../components/OpenModalBtn';\n\nconst ResultsPage = ({\n    forks,\n    fetchStatus,\n    fetchForks,\n    setRequestData,\n    history,\n    match,\n    requestData,\n    addFavor,\n    removeFavor,\n    favorites\n}) => {\n    const [modalInputValue, setModalInputValue] = useState('');\n    const [modalInputShow, setModalInputShow] = useState(false);\n    const [modalInputInvalid, setModalInputInvalid] = useState(false);\n    const { owner, repName, number } = match.params;\n    const inputValidator = new RegExp(/^([a-z0-9]|[a-z0-9](-(?!-)|[a-z0-9]){0,37}[a-z0-9])\\/[a-z0-9-]{1,39}$/i);\n\n    const changePage = (n) => {\n        history.push(`/search/${owner}/${repName}/${Number(number) + n}`);\n        setRequestData( owner, repName, number + n );\n    };\n\n    const onModalInputChange = e => {\n        const { value } = e.target;\n        if (modalInputInvalid) setModalInputInvalid(!inputValidator.test(value));\n        setModalInputValue(value);\n    };\n\n    const onAddFavorClick = (value) => {\n        if (!inputValidator.test(value)) {\n            setModalInputInvalid(true);\n            return;\n        };\n        addFavor(value);\n        setModalInputValue('');\n        setModalInputShow(false);\n    };\n\n    const onRemoveFavorClick = value => {\n        if (!inputValidator.test(value)) {\n            setModalInputInvalid(true);\n            return;\n        };\n        removeFavor(value);\n        setModalInputValue('');\n        setModalInputShow(false);\n    }\n\n    const onShowModalClick = () => {\n        setModalInputShow(!modalInputShow);\n    };\n\n    useEffect(()=> {\n        fetchForks(owner, repName, number);\n    }, [requestData]);\n\n    useEffect(() => {\n        const storingData = JSON.stringify(favorites);\n        localStorage.setItem('favorites', storingData);\n    }, [favorites])\n\n    if (fetchStatus.error) return <NotFoundPage value={`${owner}/${repName}`} />\n\n    return (\n        <div>\n            {modalInputShow ?\n            <FavorModal\n                inputValue={modalInputValue}\n                onInputChange={onModalInputChange}\n                invalidInput={modalInputInvalid}\n                onAddClick={onAddFavorClick.bind(this, modalInputValue)}\n                onRemoveClick={onRemoveFavorClick.bind(this, modalInputValue)}\n                onBackClick={onShowModalClick}\n            />\n            :\n            <></>}\n            <OpenModalBtn onBtnClick={onShowModalClick} />\n            <Wrapper>\n                {fetchStatus.loading ? <Spinner /> : <ForksList forks={forks} favorites={favorites} />}\n            </Wrapper>\n            <Pagination \n                onNextClick={changePage.bind(this, 1)}\n                onPrevClick={changePage.bind(this, -1)}\n                prevDisabled={Number(number) === 1}\n                nextDisabled={forks.length < 10}\n            />\n        </div>\n    );\n};\n\nconst mapStateToProps = ({requestData, forks, favoriteForks, fetchStatus}) => ({\n    requestData: requestData,\n    forks: forks,\n    favorites: favoriteForks,\n    fetchStatus: fetchStatus\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchForks: (owner, repository, page) => dispatch(fetchForks(owner, repository, page)),\n    setRequestData: (owner, repository, page) => dispatch(setRequestData(owner, repository, page)),\n    addFavor: fullName => dispatch(addFavorFork(fullName)),\n    removeFavor: fullName => dispatch(removeFavorFork(fullName))\n});\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ResultsPage));","import { START_LOADING, STOP_LOADING_SUCCESS, STOP_LOADING_ERROR } from '../constants/actions';\n\nexport const startLoading = () => ({\n    type: START_LOADING\n});\n\nexport const stopLoadingSuccess = () => ({\n    type: STOP_LOADING_SUCCESS\n});\n\nexport const stopLoadingError = error => ({\n    type: STOP_LOADING_ERROR,\n    payload: error\n});","import { ADD_FAVOR_FORK, REMOVE_FAVOR_FORK } from '../constants/actions';\n\nexport const addFavorFork = fork => ({\n    type: ADD_FAVOR_FORK,\n    payload: fork\n});\n\nexport const removeFavorFork = fork => ({\n    type: REMOVE_FAVOR_FORK,\n    payload: fork\n});","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\n\nimport HeaderContainer from './components/HeaderContainer';\nimport HomePage from './pages/HomePage';\nimport ResultsPage from './pages/ResultsPage';\nimport NotFoundPage from './pages/NotFoundPage';\n\n\n\nfunction App({}) {\n  return (\n    <>\n      <HeaderContainer />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/search/:owner/:repName/:number\" component={ResultsPage} />\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;","import { ADD_FAVOR_FORK, REMOVE_FAVOR_FORK } from '../constants/actions';\n\nconst initialState = localStorage.getItem('favorites') ? JSON.parse(localStorage.getItem('favorites')) : [];\n\nexport default (state=initialState, action) => {\n    switch (action.type) {\n        case ADD_FAVOR_FORK:\n            return [\n                ...state,\n                action.payload\n            ];\n        case REMOVE_FAVOR_FORK:\n            return state.filter(fork => fork !== action.payload);\n        default:\n            return state;\n    }\n}","import { START_LOADING, STOP_LOADING_ERROR, STOP_LOADING_SUCCESS } from '../constants/actions';\n\nconst initialState = {\n    loading: false,\n    error: null\n};\n\nexport default (state=initialState, action) => {\n    switch (action.type) {\n        case START_LOADING:\n            return {\n                loading: true,\n                error: null\n            };\n        case STOP_LOADING_SUCCESS:\n            return {\n                loading: false,\n                error: null\n            };\n        case STOP_LOADING_ERROR:\n            return {\n                loading: false,\n                error: action.payload\n            };\n        default:\n            return state;\n    };\n};","import { SET_FORKS } from \"../constants/actions\";\n\nexport default (state=[], action) => {\n    switch (action.type) {\n        case SET_FORKS:\n            return [\n                ...action.payload\n            ];\n        default:\n            return state;\n    }\n}","import { SET_PAGE_NUMBER } from '../constants/actions';\n\nexport default (state=null, action) => {\n    switch (action.type) {\n        case SET_PAGE_NUMBER:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import { SET_REQUEST_DATA } from '../constants/actions';\n\nexport default (state={}, action) => {\n    switch (action.type) {\n        case SET_REQUEST_DATA:\n            return action.payload;\n        default:\n            return state;\n    };\n};","import { createStore, applyMiddleware, compose } from 'redux';\n//import { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport createHistory from 'history/createBrowserHistory';\nimport rootReducer from './reducers';\n\nexport const history = createHistory();\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n    thunk\n];\n\nif (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n    \n    if (typeof devToolsExtension === 'function') enhancers.push(devToolsExtension());\n}\n\nconst composeEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n);\n\nconst store = createStore(\n    rootReducer(history),\n    initialState,\n    composeEnhancers\n);\n\nexport default store;","import { combineReducers } from 'redux';\nimport favoriteForks from './favoriteForks';\nimport fetchStatus from './fetchStatus';\nimport forks from './forks';\nimport pageNumber from './pageNumber';\nimport requestData from './requestData';\n\nexport default history => combineReducers({\n    favoriteForks,\n    fetchStatus,\n    forks,\n    pageNumber,\n    requestData\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n//import { ConnectedRouter } from 'connected-react-router';\nimport store, { history } from './store';\nimport * as serviceWorker from './serviceWorker';\n\nconst target = document.querySelector('#root');\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>, \n    target);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}